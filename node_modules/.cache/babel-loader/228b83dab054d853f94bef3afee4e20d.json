{"ast":null,"code":"var _jsxFileName = \"/home/bvangelov/projects/bozhidar-vangelov-technical-interview-part-two/src/components/Posts/PostsItemsList.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Container, Modal, InputGroup, FormControl } from 'react-bootstrap';\nimport { useCreatePostMutation, useGetUserPostsQuery } from '../../features/users.js';\nimport { useState } from 'react';\nimport PostItem from './PostItem.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostsItemsList = _ref => {\n  _s();\n\n  let {\n    userId,\n    shouldFetchPosts\n  } = _ref;\n  const {\n    data: posts,\n    isLoading\n  } = useGetUserPostsQuery(userId, {\n    skip: shouldFetchPosts\n  });\n  const [createPost] = useCreatePostMutation();\n  const [show, setShow] = useState(false);\n  const [hasChanged, setHasChanged] = useState({\n    title: false,\n    body: false\n  });\n  const [newPost, setNewPost] = useState({\n    title: '',\n    body: ''\n  });\n\n  const handleShow = () => setShow(true);\n\n  const handleClose = async () => setShow(false);\n\n  const handleChange = e => {\n    setHasChanged(prevState => ({ ...prevState,\n      [e.target.name]: true\n    }));\n    setNewPost(prevState => ({ ...prevState,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleCreate = async () => {\n    if (!newPost.title || !newPost.body) {\n      setHasChanged({\n        title: true,\n        body: true\n      });\n      return;\n    }\n\n    await createPost({\n      userId,\n      newPost\n    });\n    setShow(false);\n  };\n\n  if (isLoading || !posts) {\n    return 'Loading';\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      id: \"posts\",\n      className: \"mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        id: \"create\",\n        className: \"mb-5\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          onClick: handleShow,\n          children: \"Create a post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), posts.map(post => /*#__PURE__*/_jsxDEV(PostItem, {\n        title: post.title,\n        body: post.body\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: \"Create a post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            name: \"title\",\n            isInvalid: hasChanged.title && !newPost.title,\n            value: newPost.title,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n            children: \"Body\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            name: \"body\",\n            isInvalid: hasChanged.body && !newPost.body,\n            value: newPost.body,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleCreate,\n          children: \"Save Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PostsItemsList, \"Yb+PrtnMR1qv2uxHNbTA1XQA6Sk=\", false, function () {\n  return [useGetUserPostsQuery, useCreatePostMutation];\n});\n\n_c = PostsItemsList;\nexport default PostsItemsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostsItemsList\");","map":{"version":3,"sources":["/home/bvangelov/projects/bozhidar-vangelov-technical-interview-part-two/src/components/Posts/PostsItemsList.js"],"names":["Button","Container","Modal","InputGroup","FormControl","useCreatePostMutation","useGetUserPostsQuery","useState","PostItem","PostsItemsList","userId","shouldFetchPosts","data","posts","isLoading","skip","createPost","show","setShow","hasChanged","setHasChanged","title","body","newPost","setNewPost","handleShow","handleClose","handleChange","e","prevState","target","name","value","handleCreate","map","post","id"],"mappings":"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","sourcesContent":["import {\n  Button,\n  Container,\n  Modal,\n  InputGroup,\n  FormControl,\n} from 'react-bootstrap';\nimport {\n  useCreatePostMutation,\n  useGetUserPostsQuery,\n} from '../../features/users.js';\nimport { useState } from 'react';\nimport PostItem from './PostItem.js';\n\nconst PostsItemsList = ({ userId, shouldFetchPosts }) => {\n  const { data: posts, isLoading } = useGetUserPostsQuery(userId, {\n    skip: shouldFetchPosts,\n  });\n  const [createPost] = useCreatePostMutation();\n  const [show, setShow] = useState(false);\n  const [hasChanged, setHasChanged] = useState({\n    title: false,\n    body: false,\n  });\n  const [newPost, setNewPost] = useState({\n    title: '',\n    body: '',\n  });\n\n  const handleShow = () => setShow(true);\n  const handleClose = async () => setShow(false);\n  const handleChange = (e) => {\n    setHasChanged((prevState) => ({\n      ...prevState,\n      [e.target.name]: true,\n    }));\n    setNewPost((prevState) => ({\n      ...prevState,\n      [e.target.name]: e.target.value,\n    }));\n  };\n  const handleCreate = async () => {\n    if (!newPost.title || !newPost.body) {\n      setHasChanged({\n        title: true,\n        body: true,\n      });\n\n      return;\n    }\n    await createPost({\n      userId,\n      newPost,\n    });\n    setShow(false);\n  };\n\n  if (isLoading || !posts) {\n    return 'Loading';\n  }\n\n  return (\n    <>\n      <Container fluid id='posts' className='mt-5'>\n        <Container fluid id='create' className='mb-5'>\n          <Button variant='success' onClick={handleShow}>\n            Create a post\n          </Button>\n        </Container>\n        {posts.map((post) => (\n          <PostItem key={post.id} title={post.title} body={post.body} />\n        ))}\n      </Container>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>Create a post</Modal.Header>\n        <Modal.Body>\n          <InputGroup className='mb-3'>\n            <InputGroup.Text>Title</InputGroup.Text>\n            <FormControl\n              name='title'\n              isInvalid={hasChanged.title && !newPost.title}\n              value={newPost.title}\n              onChange={handleChange}\n            />\n          </InputGroup>\n          <InputGroup className='mb-3'>\n            <InputGroup.Text>Body</InputGroup.Text>\n            <FormControl\n              name='body'\n              isInvalid={hasChanged.body && !newPost.body}\n              value={newPost.body}\n              onChange={handleChange}\n            />\n          </InputGroup>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant='secondary' onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant='primary' onClick={handleCreate}>\n            Save Post\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default PostsItemsList;\n"]},"metadata":{},"sourceType":"module"}