{"ast":null,"code":"var _jsxFileName = \"/home/bvangelov/projects/bozhidar-vangelov-technical-interview-part-two/src/features/posts/PostsItemsList.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Button, Container, Modal, InputGroup, FormControl } from 'react-bootstrap';\nimport { useCreatePostMutation, useGetUserPostsQuery } from '../../services/posts';\nimport PostItem from './PostItem.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostList = _ref => {\n  _s();\n\n  let {\n    userId,\n    shouldFetchPosts\n  } = _ref;\n  const {\n    data: posts,\n    isLoading\n  } = useGetUserPostsQuery(userId, {\n    skip: shouldFetchPosts\n  });\n  const [createPost] = useCreatePostMutation();\n  const initialNewPostState = {\n    title: '',\n    body: ''\n  };\n  const initialHasChangedState = {\n    title: false,\n    body: false\n  };\n  const [hasChanged, setHasChanged] = useState(initialHasChangedState);\n  const [newPost, setNewPost] = useState(initialNewPostState);\n  const [show, setShow] = useState(false);\n\n  const handleShow = () => setShow(true);\n\n  const handleClose = async () => setShow(false);\n\n  const handleChange = e => {\n    setHasChanged(prevState => ({ ...prevState,\n      [e.target.name]: true\n    }));\n    setNewPost(prevState => ({ ...prevState,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleCreate = async () => {\n    if (!newPost.title || !newPost.body) {\n      setHasChanged({\n        title: true,\n        body: true\n      });\n      return;\n    }\n\n    setShow(false);\n    setHasChanged(initialHasChangedState);\n    setNewPost(initialNewPostState);\n    await createPost({\n      userId,\n      title: newPost.title,\n      body: newPost.body\n    });\n  };\n\n  if (isLoading || !posts) {\n    return 'Loading';\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      id: \"posts\",\n      className: \"mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        id: \"create\",\n        className: \"mb-5\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          onClick: handleShow,\n          children: \"Create a post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), posts.map(post => /*#__PURE__*/_jsxDEV(PostItem, {\n        userId: userId,\n        id: post.id,\n        title: post.title,\n        body: post.body\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: \"Create a post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            name: \"title\",\n            isInvalid: hasChanged.title && !newPost.title,\n            value: newPost.title,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n            children: \"Body\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            name: \"body\",\n            isInvalid: hasChanged.body && !newPost.body,\n            value: newPost.body,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleCreate,\n          children: \"Save Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PostList, \"LQCOz8YhnTFizR92XJ4vzS8lf8Y=\", false, function () {\n  return [useGetUserPostsQuery, useCreatePostMutation];\n});\n\n_c = PostList;\nexport default PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"sources":["/home/bvangelov/projects/bozhidar-vangelov-technical-interview-part-two/src/features/posts/PostsItemsList.js"],"names":["useState","Button","Container","Modal","InputGroup","FormControl","useCreatePostMutation","useGetUserPostsQuery","PostItem","PostList","userId","shouldFetchPosts","data","posts","isLoading","skip","createPost","initialNewPostState","title","body","initialHasChangedState","hasChanged","setHasChanged","newPost","setNewPost","show","setShow","handleShow","handleClose","handleChange","e","prevState","target","name","value","handleCreate","map","post","id"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport {\n  Button,\n  Container,\n  Modal,\n  InputGroup,\n  FormControl,\n} from 'react-bootstrap';\nimport {\n  useCreatePostMutation,\n  useGetUserPostsQuery,\n} from '../../services/posts';\nimport PostItem from './PostItem.js';\n\n\nconst PostList = ({ userId, shouldFetchPosts }) => {\n  const { data: posts, isLoading } = useGetUserPostsQuery(userId, {\n    skip: shouldFetchPosts,\n  });\n  const [createPost] = useCreatePostMutation();\n  const initialNewPostState = { title: '', body: '' }\n  const initialHasChangedState = { title: false, body: false }\n  const [hasChanged, setHasChanged] = useState(initialHasChangedState)\n  const [newPost, setNewPost] = useState(initialNewPostState)\n  const [show, setShow] = useState(false);\n\n  const handleShow = () => setShow(true);\n  const handleClose = async () => setShow(false);\n  const handleChange = (e) => {\n    setHasChanged(prevState => ({\n      ...prevState,\n      [e.target.name]: true\n    }))\n    setNewPost(prevState => ({\n      ...prevState,\n      [e.target.name]: e.target.value\n    }))\n  }\n  const handleCreate = async () => {\n    if (!newPost.title || !newPost.body) {\n      setHasChanged({\n        title: true,\n        body: true\n      })\n      \n      return\n    }\n  \n    setShow(false)\n    setHasChanged(initialHasChangedState)\n    setNewPost(initialNewPostState)\n  \n\n    await createPost({\n      userId,\n      title: newPost.title,\n      body: newPost.body\n    });\n  }\n\n  if (isLoading || !posts) {\n    return 'Loading';\n  }\n\n  return (\n    <>\n      <Container fluid id='posts' className='mt-5'>\n        <Container fluid id='create' className='mb-5'>\n          <Button variant='success' onClick={handleShow}>\n            Create a post\n          </Button>\n        </Container>\n        {posts.map((post) => (\n          <PostItem key={post.id} userId={userId} id={post.id} title={post.title} body={post.body} />\n        ))}\n      </Container>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          Create a post\n        </Modal.Header>\n        <Modal.Body>\n        <InputGroup className='mb-3'>\n            <InputGroup.Text>Title</InputGroup.Text>\n            <FormControl name='title' isInvalid={hasChanged.title && !newPost.title} value={newPost.title} onChange={handleChange} />\n          </InputGroup>\n          <InputGroup className='mb-3'>\n            <InputGroup.Text>Body</InputGroup.Text>\n            <FormControl name='body' isInvalid={hasChanged.body && !newPost.body} value={newPost.body} onChange={handleChange} />\n          </InputGroup>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant='secondary' onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant='primary' onClick={handleCreate}>\n            Save Post\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default PostList;\n"]},"metadata":{},"sourceType":"module"}