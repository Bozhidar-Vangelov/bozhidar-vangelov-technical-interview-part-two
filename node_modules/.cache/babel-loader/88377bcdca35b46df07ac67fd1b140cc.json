{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nconst baseUrl = 'https://jsonplaceholder.typicode.com/';\nexport const users = createApi({\n  reducerPath: 'users',\n  tagTypes: ['User'],\n  baseQuery: fetchBaseQuery({\n    baseUrl\n  }),\n  endpoints: builder => ({\n    getAllUsers: builder.query({\n      query: () => 'users'\n    }),\n    updateUserById: builder.mutation({\n      query: _ref => {\n        let {\n          userId,\n          ...body\n        } = _ref;\n        return {\n          url: `users/${userId}`,\n          method: 'PATCH',\n          body\n        };\n      },\n\n      async onQueryStarted(_ref2, _ref3) {\n        let {\n          userId\n        } = _ref2;\n        let {\n          dispatch,\n          queryFulfilled\n        } = _ref3;\n        const {\n          data: updatedData\n        } = await queryFulfilled;\n        dispatch(users.util.updateQueryData('getAllUsers', undefined, userList => {\n          const userIndex = userList.findIndex(user => user.id === userId);\n          const currentUser = userList[userIndex];\n          Object.assign(currentUser, { ...currentUser,\n            ...updatedData\n          });\n        }));\n      }\n\n    })\n  })\n});\nexport const {\n  useGetAllUsersQuery,\n  useUpdateUserByIdMutation\n} = users;","map":{"version":3,"sources":["/home/bvangelov/projects/bozhidar-vangelov-technical-interview-part-two/src/services/users.js"],"names":["createApi","fetchBaseQuery","baseUrl","users","reducerPath","tagTypes","baseQuery","endpoints","builder","getAllUsers","query","updateUserById","mutation","userId","body","url","method","onQueryStarted","dispatch","queryFulfilled","data","updatedData","util","updateQueryData","undefined","userList","userIndex","findIndex","user","id","currentUser","Object","assign","useGetAllUsersQuery","useUpdateUserByIdMutation"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C;AAEA,MAAMC,OAAO,GAAG,uCAAhB;AAEA,OAAO,MAAMC,KAAK,GAAGH,SAAS,CAAC;AAC7BI,EAAAA,WAAW,EAAE,OADgB;AAE7BC,EAAAA,QAAQ,EAAE,CAAC,MAAD,CAFmB;AAG7BC,EAAAA,SAAS,EAAEL,cAAc,CAAC;AAAEC,IAAAA;AAAF,GAAD,CAHI;AAI7BK,EAAAA,SAAS,EAAGC,OAAD,KAAc;AACvBC,IAAAA,WAAW,EAAED,OAAO,CAACE,KAAR,CAAc;AACzBA,MAAAA,KAAK,EAAE,MAAM;AADY,KAAd,CADU;AAIvBC,IAAAA,cAAc,EAAEH,OAAO,CAACI,QAAR,CAAiB;AAC/BF,MAAAA,KAAK,EAAE;AAAA,YAAC;AAAEG,UAAAA,MAAF;AAAU,aAAGC;AAAb,SAAD;AAAA,eAA0B;AAC/BC,UAAAA,GAAG,EAAG,SAAQF,MAAO,EADU;AAE/BG,UAAAA,MAAM,EAAE,OAFuB;AAG/BF,UAAAA;AAH+B,SAA1B;AAAA,OADwB;;AAM/B,YAAMG,cAAN,eAA+D;AAAA,YAA1C;AAAEJ,UAAAA;AAAF,SAA0C;AAAA,YAA9B;AAAEK,UAAAA,QAAF;AAAYC,UAAAA;AAAZ,SAA8B;AAC7D,cAAM;AAAEC,UAAAA,IAAI,EAAEC;AAAR,YAAwB,MAAMF,cAApC;AAEAD,QAAAA,QAAQ,CACNf,KAAK,CAACmB,IAAN,CAAWC,eAAX,CAA2B,aAA3B,EAA0CC,SAA1C,EAAsDC,QAAD,IAAc;AACjE,gBAAMC,SAAS,GAAGD,QAAQ,CAACE,SAAT,CAAoBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYhB,MAAzC,CAAlB;AACA,gBAAMiB,WAAW,GAAGL,QAAQ,CAACC,SAAD,CAA5B;AACAK,UAAAA,MAAM,CAACC,MAAP,CAAcF,WAAd,EAA2B,EACzB,GAAGA,WADsB;AAEzB,eAAGT;AAFsB,WAA3B;AAID,SAPD,CADM,CAAR;AAUD;;AAnB8B,KAAjB;AAJO,GAAd;AAJkB,CAAD,CAAvB;AAgCP,OAAO,MAAM;AAAEY,EAAAA,mBAAF;AAAuBC,EAAAA;AAAvB,IAAqD/B,KAA3D","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nconst baseUrl = 'https://jsonplaceholder.typicode.com/';\n\nexport const users = createApi({\n  reducerPath: 'users',\n  tagTypes: ['User'],\n  baseQuery: fetchBaseQuery({ baseUrl }),\n  endpoints: (builder) => ({\n    getAllUsers: builder.query({\n      query: () => 'users',\n    }),\n    updateUserById: builder.mutation({\n      query: ({ userId, ...body }) => ({\n        url: `users/${userId}`,\n        method: 'PATCH',\n        body,\n      }),\n      async onQueryStarted({ userId }, { dispatch, queryFulfilled }) {\n        const { data: updatedData } = await queryFulfilled;\n\n        dispatch(\n          users.util.updateQueryData('getAllUsers', undefined, (userList) => {\n            const userIndex = userList.findIndex((user) => user.id === userId);\n            const currentUser = userList[userIndex];\n            Object.assign(currentUser, {\n              ...currentUser,\n              ...updatedData,\n            });\n          })\n        );\n      },\n    }),\n  }),\n});\n\nexport const { useGetAllUsersQuery, useUpdateUserByIdMutation } = users;\n"]},"metadata":{},"sourceType":"module"}