{"ast":null,"code":"var _jsxFileName = \"/home/bvangelov/projects/bozhidar-vangelov-technical-interview-part-two/src/components/users/UserData.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect, useState } from 'react';\nimport { Button, Form, Container, InputGroup, FormControl } from 'react-bootstrap';\nimport { useGetAllUsersQuery, useUpdateUserByIdMutation } from '../../services/users';\nimport { getEntries, getDifferences } from '../../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserData = _ref => {\n  _s();\n\n  let {\n    userId\n  } = _ref;\n  const [updateUserById] = useUpdateUserByIdMutation();\n  const {\n    user\n  } = useGetAllUsersQuery(undefined, {\n    selectFromResult: _ref2 => {\n      let {\n        data\n      } = _ref2;\n      return {\n        user: data === null || data === void 0 ? void 0 : data.find(u => u.id === userId)\n      };\n    }\n  });\n  const [userInfo, setUserInfo] = useState({});\n  const [, ...entries] = getEntries(userInfo);\n\n  const updateWithCachedState = () => {\n    const cachedEntries = getEntries(user);\n    const state = cachedEntries.map(_ref3 => {\n      let [key, value] = _ref3;\n      return {\n        [key]: value\n      };\n    }).reduce((result, current) => ({ ...result,\n      ...current\n    }), {});\n    setUserInfo(state);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newValues = getDifferences(user, userInfo);\n    await updateUserById({\n      userId,\n      ...newValues\n    });\n  };\n\n  const handleOnChange = e => {\n    setUserInfo(prevState => ({ ...prevState,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleRevertChanges = () => {\n    updateWithCachedState();\n  };\n\n  useEffect(() => {\n    console.log({\n      user\n    });\n    updateWithCachedState();\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    id: \"info\",\n    className: \"border-bottom\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      className: \"d-flex flex-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        id: \"inputs\",\n        className: \"d-flex flex-wrap\",\n        children: entries.map((_ref4, index) => {\n          let [key, value] = _ref4;\n          return /*#__PURE__*/_jsxDEV(Fragment, {\n            children: /*#__PURE__*/_jsxDEV(InputGroup, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                children: key\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                name: key,\n                value: value,\n                onChange: handleOnChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)\n          }, `${index}${key}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        id: \"buttons\",\n        className: \"d-flex justify-content-evenly mt-5 mb-5\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          type: \"submit\",\n          children: \"Confirm changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: handleRevertChanges,\n          children: \"Revert changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserData, \"GTaJSaowoz4aS3yze85+ZJ/7Z64=\", false, function () {\n  return [useUpdateUserByIdMutation, useGetAllUsersQuery];\n});\n\n_c = UserData;\nexport default UserData;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserData\");","map":{"version":3,"sources":["/home/bvangelov/projects/bozhidar-vangelov-technical-interview-part-two/src/components/users/UserData.js"],"names":["Fragment","useEffect","useState","Button","Form","Container","InputGroup","FormControl","useGetAllUsersQuery","useUpdateUserByIdMutation","getEntries","getDifferences","UserData","userId","updateUserById","user","undefined","selectFromResult","data","find","u","id","userInfo","setUserInfo","entries","updateWithCachedState","cachedEntries","state","map","key","value","reduce","result","current","handleSubmit","e","preventDefault","newValues","handleOnChange","prevState","target","name","handleRevertChanges","console","log","index"],"mappings":"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","sourcesContent":["import { Fragment, useEffect, useState } from 'react'\nimport {\n  Button,\n  Form,\n  Container,\n  InputGroup,\n  FormControl\n} from 'react-bootstrap'\nimport {\n  useGetAllUsersQuery,\n  useUpdateUserByIdMutation\n} from '../../services/users'\nimport { getEntries, getDifferences } from '../../utils'\n\nconst UserData = ({ userId }) => {\n  const [updateUserById] = useUpdateUserByIdMutation()\n  const { user } = useGetAllUsersQuery(undefined, {\n    selectFromResult: ({ data }) => ({\n      user: data?.find(u => u.id === userId)\n    })\n  })\n\n  const [userInfo, setUserInfo] = useState({})\n\n  const [, ...entries] = getEntries(userInfo)\n\n  const updateWithCachedState = () => {\n    const cachedEntries = getEntries(user)\n    const state = cachedEntries\n      .map(([key, value]) => ({\n        [key]: value\n      }))\n      .reduce((result, current) => ({ ...result, ...current }), {})\n\n      setUserInfo(state)\n  }\n\n  const handleSubmit = async e => {\n    e.preventDefault()\n\n    const newValues = getDifferences(user, userInfo)\n\n    await updateUserById({\n      userId,\n      ...newValues\n    })\n  }\n\n  const handleOnChange = e => {\n    setUserInfo(prevState => ({\n      ...prevState,\n      [e.target.name]: e.target.value\n    }))\n  }\n\n  const handleRevertChanges = () => {\n    updateWithCachedState()\n  }\n\n  useEffect(() => {\n    console.log({user})\n    updateWithCachedState()\n  }, [user])\n\n  return (\n    <Container fluid id='info' className='border-bottom'>\n      <Form onSubmit={handleSubmit} className='d-flex flex-wrap'>\n        <Container fluid id='inputs' className='d-flex flex-wrap'>\n          {entries.map(([key, value], index) => (\n            <Fragment key={`${index}${key}`}>\n              <InputGroup className='mb-3'>\n                <InputGroup.Text>{key}</InputGroup.Text>\n                <FormControl\n                  name={key}\n                  value={value}\n                  onChange={handleOnChange}\n                />\n              </InputGroup>\n            </Fragment>\n          ))}\n        </Container>\n        <Container\n          fluid\n          id='buttons'\n          className='d-flex justify-content-evenly mt-5 mb-5'\n        >\n          <Button variant='success' type='submit'>\n            Confirm changes\n          </Button>\n          <Button variant='danger' onClick={handleRevertChanges}>\n            Revert changes\n          </Button>\n        </Container>\n      </Form>\n    </Container>\n  )\n}\n\nexport default UserData\n"]},"metadata":{},"sourceType":"module"}