{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nexport const posts = createApi({\n  reducerPath: 'posts',\n  tagTypes: ['Posts'],\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://jsonplaceholder.typicode.com/'\n  }),\n  endpoints: builder => ({\n    getUserPosts: builder.query({\n      query: userId => `posts?userId=${userId}`\n    }),\n    createPost: builder.mutation({\n      query: _ref => {\n        let {\n          userId,\n          ...rest\n        } = _ref;\n        return {\n          url: `posts?userId=${userId}`,\n          method: 'POST',\n          body: rest\n        };\n      }\n    })\n  })\n});\nexport const {\n  useGetAllUsersQuery,\n  useGetUserByIdQuery,\n  useGetUserPostsQuery,\n  useUpdateUserByIdMutation,\n  useCreatePostMutation\n} = posts;","map":{"version":3,"sources":["/home/bvangelov/projects/bozhidar-vangelov-technical-interview-part-two/src/features/posts.js"],"names":["createApi","fetchBaseQuery","posts","reducerPath","tagTypes","baseQuery","baseUrl","endpoints","builder","getUserPosts","query","userId","createPost","mutation","rest","url","method","body","useGetAllUsersQuery","useGetUserByIdQuery","useGetUserPostsQuery","useUpdateUserByIdMutation","useCreatePostMutation"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C;AAEA,OAAO,MAAMC,KAAK,GAAGF,SAAS,CAAC;AAC7BG,EAAAA,WAAW,EAAE,OADgB;AAE7BC,EAAAA,QAAQ,EAAE,CAAC,OAAD,CAFmB;AAG7BC,EAAAA,SAAS,EAAEJ,cAAc,CAAC;AACxBK,IAAAA,OAAO,EAAE;AADe,GAAD,CAHI;AAM7BC,EAAAA,SAAS,EAAGC,OAAD,KAAc;AACvBC,IAAAA,YAAY,EAAED,OAAO,CAACE,KAAR,CAAc;AAC1BA,MAAAA,KAAK,EAAGC,MAAD,IAAa,gBAAeA,MAAO;AADhB,KAAd,CADS;AAKvBC,IAAAA,UAAU,EAAEJ,OAAO,CAACK,QAAR,CAAiB;AAC3BH,MAAAA,KAAK,EAAE;AAAA,YAAC;AAAEC,UAAAA,MAAF;AAAU,aAAGG;AAAb,SAAD;AAAA,eAA0B;AAC/BC,UAAAA,GAAG,EAAG,gBAAeJ,MAAO,EADG;AAE/BK,UAAAA,MAAM,EAAE,MAFuB;AAG/BC,UAAAA,IAAI,EAAEH;AAHyB,SAA1B;AAAA;AADoB,KAAjB;AALW,GAAd;AANkB,CAAD,CAAvB;AAqBP,OAAO,MAAM;AACXI,EAAAA,mBADW;AAEXC,EAAAA,mBAFW;AAGXC,EAAAA,oBAHW;AAIXC,EAAAA,yBAJW;AAKXC,EAAAA;AALW,IAMTpB,KANG","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const posts = createApi({\n  reducerPath: 'posts',\n  tagTypes: ['Posts'],\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://jsonplaceholder.typicode.com/',\n  }),\n  endpoints: (builder) => ({\n    getUserPosts: builder.query({\n      query: (userId) => `posts?userId=${userId}`,\n    }),\n\n    createPost: builder.mutation({\n      query: ({ userId, ...rest }) => ({\n        url: `posts?userId=${userId}`,\n        method: 'POST',\n        body: rest,\n      }),\n    }),\n  }),\n});\n\nexport const {\n  useGetAllUsersQuery,\n  useGetUserByIdQuery,\n  useGetUserPostsQuery,\n  useUpdateUserByIdMutation,\n  useCreatePostMutation,\n} = posts;\n"]},"metadata":{},"sourceType":"module"}